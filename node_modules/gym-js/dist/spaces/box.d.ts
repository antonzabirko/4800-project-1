import Space from './space';
import * as tf from '@tensorflow/tfjs';
/**
 * A `Box` `Space` class.
 *
 * Used for spaces with a continuous sample space as opposed to discrete.
 *
 * @example
 * ```typescript
 * ```
 */
export default class Box implements Space {
    shape: number[];
    type: any;
    seedValue: number;
    low: number[] | number;
    high: number[] | number;
    isShaped: boolean;
    sampleSpace: tf.Tensor;
    /**
     * @param low - The lower bound of the box
     * @param high - The upper bound of the box
     * @param shape - The shape of the space. Must be provided if
     *  the low and high are single numbers
     */
    constructor(low: number[], high: number[], shape?: number[]);
    /**
     * Sample a random value from this `Space`.
     *
     * @returns - A random sample.
     */
    sample(): tf.Tensor;
    seed(seed: number): void;
    set(space: tf.Tensor): void;
    get(): tf.Tensor;
    toString(): string;
}
//# sourceMappingURL=box.d.ts.map